user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    upstream backend_santicolle {
        # algoritmo balanceo (least_conn; round-robin; etc.)
        server 192.168.10.2;
        server 192.168.10.3;
        server 192.168.10.4;
        server 192.168.10.5;
        server 192.168.10.6;
        server 192.168.10.7;
        server 192.168.10.8;
        server 192.168.10.9;
    }

    limit_conn_zone $binary_remote_addr zone=addr:10m;

    server {
        listen 80;
        server_name tu_dominio.com;
        return 301 https://$host$request_uri;
    }

    server {
        limit_conn addr 10;

        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/certificado_santicolle.crt;
        ssl_certificate_key /etc/nginx/ssl/certificado_santicolle.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        server_name nginx_santicolle;
        access_log /var/log/nginx/nginx_santicolle.access.log;
        error_log /var/log/nginx/nginx_santicolle.error.log;

        location / {
            # Detectar y bloquear intentos de inyección SQL
            if ($query_string ~* "union.*select.*\(") {
                return 403;
            }

            if ($query_string ~* "select.*from.*information_schema.tables") {
                return 403;
            }

            # Detectar y bloquear intentos de XSS
            if ($query_string ~* "<script>.*</script>") {
                return 403;
            }
            if ($query_string ~* "<script.*>") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de comandos
            if ($query_string ~* "cmd=.*") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "php://input") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "data:text/html;base64") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "data:text/plain;base64") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "data:text/javascript;base64") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "data:text/css;base64") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "data:text/xml;base64") {
                return 403;
            }

            # Detectar y bloquear intentos de inyección de código PHP
            if ($query_string ~* "data:text/php;base64") {
                return 403;
            }

            proxy_pass http://backend_santicolle;
            proxy_set_header Cookie $http_cookie;
            proxy_hide_header Set-Cookie;
        }

        location /estadisticas_santicolle {
            stub_status on;
        }
    }
}
